/*3. Напишіть функцію-обгортку, яка приймає на вхід масив
 функцій і їх параметрів і повертає масив результатів їх виконання. Кількість аргументів виконуваної функції не обмежена!*/


/// Функція, яка виконує послідовне виконання функцій з параметрами та повертає результати їх виконання.
async function bulkRun(functions) {
    const results = []; // Масив для зберігання результатів.

    for (const [func, args] of functions) {
        // Використовуємо проміс для виконання функції з параметрами та очікуємо результату виконання.
        const result = await new Promise((resolve) => func(...args, resolve));
        results.push(result); // Додаємо результат в масив.
    }

    return results; // Повертаємо результати виконання функцій.
}

// Приклади функцій для виконання.
const f1 = (cb) => setTimeout(() => cb(1), 500);
const f2 = (a, cb) => setTimeout(() => cb(a), 300);
const f3 = (a, b, cb) => setTimeout(() => cb([a, b]), 1000);

// Масив функцій та їх параметрів для виконання.
const functionsToRun = [
    [f1, []],      // Виклик f1 без параметрів.
    [f2, [2]],     // Виклик f2 з параметром 2.
    [f3, [3, 4]],  // Виклик f3 з параметрами 3 і 4.
];

// Виклик функції bulkRun та виведення результатів в консоль.
bulkRun(functionsToRun).then((results) => {
    console.log(results);
});

// Очікуваний результат: [1, 2, [3, 4]]
