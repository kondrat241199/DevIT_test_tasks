/* Напишіть функцію combos, яка приймає ціле позитивне число num і повертає масив масивів позитивних цілих чисел,
де сума кожного масиву дорівнює num. Масиви не повинні повторюватися. */
function combos(num) {
    const result = [];

    // Внутрішня функція для пошуку комбінацій
    function findCombinations(target, currentCombo, start) {
        // Якщо досягнута ціль (сума елементів дорівнює нулю),
        // додаємо поточну комбінацію до результату та завершуємо рекурсію
        if (target === 0) {
            result.push(currentCombo.slice()); // Додаємо поточну комбінацію до результату
            return;
        }

        // Перебираємо числа від start до target
        for (let i = start; i <= target; i++) {
            currentCombo.push(i); // Додаємо поточне число до комбінації
            // Рекурсивно викликаємо функцію для залишку суми та поточної комбінації
            // Починаємо з числа i, щоб уникнути повторень
            findCombinations(target - i, currentCombo, i);
            currentCombo.pop(); // Видаляємо останній елемент з комбінації перед переходом до наступного числа
        }
    }

    // Починаємо пошук з 1, оскільки нулів не можна використовувати в комбінаціях
    findCombinations(num, [], 1);

    return result;
}

console.log(combos(3));
console.log(combos(10));
